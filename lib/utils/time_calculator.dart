import 'package:intl/intl.dart';

class TimeCalculator {
  /// ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•
  static String calculateTimeRemaining({
    required DateTime? startDate,
    required DateTime? endDate,
    required String status,
  }) {
    final now = DateTime.now();
    
    print('üîç TIMECALCULATOR: now: $now');
    print('üîç TIMECALCULATOR: startDate: $startDate');
    print('üîç TIMECALCULATOR: endDate: $endDate');
    print('üîç TIMECALCULATOR: status: $status');
    
    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î
    if (startDate == null || endDate == null) {
      print('üîç TIMECALCULATOR: Missing dates, returning "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏ß‡∏•‡∏≤"');
      return '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏ß‡∏•‡∏≤';
    }
    
    switch (status) {
      case 'current':
        // ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏• - ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏à‡∏ô‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î
        final remainingTime = _calculateRemainingTime(now, endDate);
        return remainingTime == '‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤' ? '‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡πÅ‡∏•‡πâ‡∏ß' : '‡πÄ‡∏´‡∏•‡∏∑‡∏≠ $remainingTime';
        
      case 'upcoming':
        // ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏£‡∏¥‡πà‡∏° - ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏à‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°
        final remainingTime = _calculateRemainingTime(now, startDate);
        return remainingTime == '‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤' ? '‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß' : '‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ô‡∏≠‡∏µ‡∏Å $remainingTime';
        
      case 'completed':
        // ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡πÅ‡∏•‡πâ‡∏ß
        return '‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡πÅ‡∏•‡πâ‡∏ß';
        
      default:
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏à‡∏≤‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
        if (now.isBefore(startDate)) {
          final remainingTime = _calculateRemainingTime(now, startDate);
          return remainingTime == '‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤' ? '‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß' : '‡∏°‡∏≤‡πÉ‡∏ô $remainingTime';
        } else if (now.isAfter(endDate)) {
          return '‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡πÅ‡∏•‡πâ‡∏ß';
        } else {
          final remainingTime = _calculateRemainingTime(now, endDate);
          return remainingTime == '‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤' ? '‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡πÅ‡∏•‡πâ‡∏ß' : '‡πÄ‡∏´‡∏•‡∏∑‡∏≠ $remainingTime';
        }
    }
  }
  
  /// ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Å‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á
  static String _calculateRemainingTime(DateTime now, DateTime targetTime) {
    final difference = targetTime.difference(now);
    
    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏ß‡∏•‡∏≤‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß
    if (difference.isNegative) {
      return '‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤';
    }
    
    final days = difference.inDays;
    final hours = difference.inHours % 24;
    final minutes = difference.inMinutes % 60;
    final seconds = difference.inSeconds % 60;
    
    if (days > 0) {
      return '${days}‡∏ß‡∏±‡∏ô ${hours}‡∏ä‡∏° ${minutes}‡∏ô‡∏≤‡∏ó‡∏µ';
    } else if (hours > 0) {
      return '${hours}‡∏ä‡∏° ${minutes}‡∏ô‡∏≤‡∏ó‡∏µ';
    } else if (minutes > 0) {
      return '${minutes}‡∏ô‡∏≤‡∏ó‡∏µ ${seconds}‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ';
    } else {
      return '${seconds}‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ';
    }
  }
  
  /// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
  static String getAuctionStatus({
    required DateTime? startDate,
    required DateTime? endDate,
  }) {
    if (startDate == null || endDate == null) {
      return 'unknown';
    }
    
    final now = DateTime.now();
    
    if (now.isBefore(startDate)) {
      return 'upcoming';
    } else if (now.isAfter(endDate)) {
      return 'completed';
    } else {
      return 'current';
    }
  }
  
  /// ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢
  static String formatDateTime(DateTime? dateTime) {
    if (dateTime == null) return '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
    
    final formatter = DateFormat('dd/MM/yyyy HH:mm');
    return formatter.format(dateTime);
  }
  
  /// ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ö‡∏ö‡∏™‡∏±‡πâ‡∏ô
  static String formatDateShort(DateTime? dateTime) {
    if (dateTime == null) return '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
    
    final formatter = DateFormat('dd/MM/yy');
    return formatter.format(dateTime);
  }
  
  /// ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏ö‡∏ö‡∏™‡∏±‡πâ‡∏ô
  static String formatTimeShort(DateTime? dateTime) {
    if (dateTime == null) return '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
    
    final formatter = DateFormat('HH:mm');
    return formatter.format(dateTime);
  }
} 